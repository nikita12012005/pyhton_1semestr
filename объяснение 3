1. Чтение данных из CSV
CSV (Comma-Separated Values) — это формат данных, где каждая строка представляет запись, а значения в строке разделяются запятыми или другим разделителем. В Python удобно использовать модуль `csv`.
1. Открываем CSV-файл в режиме чтения.
2. Используем `csv.DictReader`, который позволяет интерпретировать каждую строку как словарь, где ключи берутся из заголовков первой строки файла.
3. Добавляем каждую запись (строку) в список.

2. Конвертация данных в JSON
JSON (JavaScript Object Notation) — это удобный формат для хранения и передачи данных. Python предоставляет модуль `json` для работы с этим форматом.
1. Используем `json.dump` для записи списка словарей в JSON-файл.
2. Указываем `ensure_ascii=False`, чтобы сохранить корректные символы (например, кириллицу).
3. Указываем `indent=4` для форматирования JSON в читаемый вид.

3. Чтение данных из JSON
После сохранения данных в JSON, их можно легко снова прочитать:
1. Используем `json.load` для загрузки данных из JSON-файла.
2. Это преобразует JSON-структуру обратно в Python-объекты (список словарей).

4. Поиск студента по фамилии
Чтобы найти студента по фамилии:
1. Применяем фильтрацию списка с помощью `list comprehension`.
2. Сравниваем введенную фамилию с полем "Прізвище" в каждом словаре.  
   Чтобы избежать ошибок при вводе (например, из-за регистра букв), используем `lower()`.

5. Вывод информации
Для красивого вывода информации:
1. Проходим по списку найденных студентов.
2. Форматируем каждую запись в удобный текст.

